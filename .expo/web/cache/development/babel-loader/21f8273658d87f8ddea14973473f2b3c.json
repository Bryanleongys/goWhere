{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bryanleongyongsheng/Desktop/goWhere Application/goWhere/screens/travelscreens/AddTravelScreen.js\";\n\nimport React, { Component, useState } from \"react\";\nimport { Container, Header, Content, Input, Item, Text, Left, Right, Body, Button, Icon, Title } from \"native-base\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\n\nvar AddTravelScreen = function AddTravelScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  GLOBAL = require(\"../global\");\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState(\"date\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var dd = date.getDate();\n  var mmnumber = date.getMonth();\n  var mm = monthNames[date.getMonth()];\n  var yyyy = date.getFullYear();\n  var dateNum = yyyy * 10000 + (mmnumber + 1) * 100 + dd;\n  var dateString = dd + \" \" + mm + \" \" + yyyy;\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  };\n\n  var handlePress = function handlePress() {\n    if (location == \"\") {\n      return Alert.alert(\"Please fill in missing fields!\");\n    }\n\n    var locationDetails = {\n      date: dateString,\n      dateNum: dateNum,\n      locationName: location,\n      postalCode: \"439947\"\n    };\n    axios.patch(baseURL + \"cliques/addlog/\" + GLOBAL.USER.cliqueID, locationDetails).then(function (res) {\n      if (res.status == 200) {\n        console.log(\"Location successfully added!\");\n        Alert.alert(\"Location Added!\", \"\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return navigation.navigate(\"Home\");\n          }\n        }]);\n      }\n    }).catch(function (error) {\n      if (error.message == \"Request failed with status code 404\") {\n        return Alert.alert(\"Location already exists!\");\n      }\n\n      console.log(\"Something went wrong\");\n    });\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    style: {\n      backgroundColor: \"#bff6eb\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-back\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }))), React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Add Location\")), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), React.createElement(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(Item, {\n    regular: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \" Name of Location: \"), React.createElement(Input, {\n    value: location,\n    onChangeText: setLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), React.createElement(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \" Date of Outing: \"), React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: \"date\",\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    style: {\n      width: 130,\n      alignSelf: \"center\",\n      paddingTop: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), React.createElement(Content, {\n    style: {\n      paddingTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    block: true,\n    style: {\n      backgroundColor: \"#bff6eb\",\n      width: 300,\n      alignSelf: \"center\"\n    },\n    onPress: handlePress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#000000\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Update Travel Log\")))));\n};\n\nexport default AddTravelScreen;","map":{"version":3,"sources":["/Users/bryanleongyongsheng/Desktop/goWhere Application/goWhere/screens/travelscreens/AddTravelScreen.js"],"names":["React","Component","useState","Container","Header","Content","Input","Item","Text","Left","Right","Body","Button","Icon","Title","DateTimePicker","SwipeListView","axios","baseURL","AddTravelScreen","navigation","route","GLOBAL","require","location","setLocation","Date","date","setDate","mode","setMode","show","setShow","monthNames","dd","getDate","mmnumber","getMonth","mm","yyyy","getFullYear","dateNum","dateString","onChange","event","selectedDate","currentDate","Platform","OS","handlePress","Alert","alert","locationDetails","locationName","postalCode","patch","USER","cliqueID","then","res","status","console","log","text","onPress","navigate","catch","error","message","backgroundColor","goBack","width","alignSelf","paddingTop","color"],"mappings":"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","sourcesContent":["// Navigates here when plus button is pressed from Travel Log Screen\nimport React, { Component, useState } from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  Input,\n  Item,\n  Text,\n  Left,\n  Right,\n  Body,\n  Button,\n  Icon,\n  Title,\n} from \"native-base\";\nimport { Alert } from \"react-native\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\n\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\n\nconst AddTravelScreen = ({ navigation, route }) => {\n  GLOBAL = require(\"../global\");\n  const [location, setLocation] = useState(\"\");\n\n  const [date, setDate] = useState(new Date());\n  const [mode, setMode] = useState(\"date\");\n  const [show, setShow] = useState(false);\n\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var dd = date.getDate();\n  var mmnumber = date.getMonth();\n  var mm = monthNames[date.getMonth()];\n  var yyyy = date.getFullYear();\n\n  var dateNum = yyyy * 10000 + (mmnumber + 1) * 100 + dd;\n  var dateString = dd + \" \" + mm + \" \" + yyyy;\n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  };\n\n  const handlePress = () => {\n    // if (dateString in GLOBAL.TRAVELHISTORY) {\n    //   GLOBAL.TRAVELHISTORY[dateString].push(location);\n    // } else {\n    //   GLOBAL.TRAVELHISTORY[dateString] = [location];\n    //   console.log(location);\n    // }\n    if (location == \"\") {\n      return Alert.alert(\"Please fill in missing fields!\");\n    }\n    let locationDetails = {\n      date: dateString,\n      dateNum: dateNum,\n      locationName: location,\n      postalCode: \"439947\", // figure out how to get from google api\n    };\n    axios\n      .patch(\n        `${baseURL}cliques/addlog/${GLOBAL.USER.cliqueID}`,\n        locationDetails\n      )\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(\"Location successfully added!\");\n          Alert.alert(\"Location Added!\", \"\", [\n            {\n              text: \"OK\",\n              onPress: () => navigation.navigate(\"Home\"),\n            },\n          ]);\n        }\n      })\n      .catch((error) => {\n        if (error.message == \"Request failed with status code 404\") {\n          return Alert.alert(\"Location already exists!\");\n        }\n        console.log(\"Something went wrong\");\n      });\n  };\n\n  return (\n    <Container>\n      <Header style={{ backgroundColor: \"#bff6eb\" }}>\n        <Left>\n          <Button transparent onPress={() => navigation.goBack()}>\n            <Icon name=\"arrow-back\" />\n          </Button>\n        </Left>\n        <Body>\n          <Title>Add Location</Title>\n        </Body>\n        <Right></Right>\n      </Header>\n      <Content>\n        <Item regular>\n          <Text> Name of Location: </Text>\n          <Input value={location} onChangeText={setLocation} />\n        </Item>\n        <Item>\n          <Text> Date of Outing: </Text>\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={date}\n            mode={\"date\"}\n            is24Hour={true}\n            display=\"default\"\n            onChange={onChange}\n            style={{ width: 130, alignSelf: \"center\", paddingTop: 50 }}\n          />\n        </Item>\n        <Content style={{ paddingTop: 20 }}>\n          <Button\n            block\n            style={{\n              backgroundColor: \"#bff6eb\",\n              width: 300,\n              alignSelf: \"center\",\n            }}\n            onPress={handlePress}\n          >\n            <Text style={{ color: \"#000000\" }}>Update Travel Log</Text>\n          </Button>\n        </Content>\n      </Content>\n    </Container>\n  );\n};\n\nexport default AddTravelScreen;\n"]},"metadata":{},"sourceType":"module"}