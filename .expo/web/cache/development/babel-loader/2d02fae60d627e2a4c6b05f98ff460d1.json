{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bryanleongyongsheng/Desktop/goWhere Application 2/goWhere/screens/homescreens/ResetPasswordScreen.js\";\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Container, Header, Title, Content, Button, Item, Label, Input, Body, Left, Right, Icon, Form, Text } from \"native-base\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NavigationHelpersContext } from \"@react-navigation/core\";\nimport { CommonActions } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\n\nvar ResetPasswordScreen = function ResetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password2 = _React$useState6[0],\n      setPassword2 = _React$useState6[1];\n\n  var handlePress = function handlePress() {\n    if (email == \"\" || password == \"\" || password2 == \"\") {\n      return Alert.alert(\"Please fill in missing fields!\");\n    }\n\n    if (password != password2) {\n      return Alert.alert(\"Passwords mismatch. Please key in again.\");\n    }\n\n    var userData = {\n      email: email,\n      password: password\n    };\n    axios.patch(baseURL + \"users/resetpassword\", userData).then(function (res) {\n      if (res.status == 200) {\n        console.log(\"Successful change!\");\n        Alert.alert(\"Password has been reset!\", \"\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return navigation.dispatch(CommonActions.reset({\n              index: 1,\n              routes: [{\n                name: \"Welcome\"\n              }]\n            }));\n          }\n        }]);\n      }\n    }).catch(function (error) {\n      if (error.message == \"Request failed with status code 400\") {\n        Alert.alert(\"Email does not exist.\");\n      }\n\n      console.log(\"Failed\");\n    });\n  };\n\n  return React.createElement(Container, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    style: {\n      backgroundColor: \"#bff6eb\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-back\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }))), React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    style: {\n      fontSize: 17\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Reset Password\")), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), React.createElement(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Item, {\n    floatingLabel: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Email address\"), React.createElement(Input, {\n    name: \"email\",\n    id: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text.toLowerCase());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"New Password\"), React.createElement(Input, {\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), React.createElement(Item, {\n    floatingLabel: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Confirm New Password\"), React.createElement(Input, {\n    name: \"password2\",\n    id: \"password2\",\n    value: password2,\n    onChangeText: function onChangeText(text) {\n      return setPassword2(text);\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }))), React.createElement(Button, {\n    block: true,\n    style: {\n      margin: 15,\n      marginTop: 50\n    },\n    onPress: handlePress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Reset Password\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#bff6eb\"\n  }\n});\nexport default ResetPasswordScreen;","map":{"version":3,"sources":["/Users/bryanleongyongsheng/Desktop/goWhere Application 2/goWhere/screens/homescreens/ResetPasswordScreen.js"],"names":["React","Component","Container","Header","Title","Content","Button","Item","Label","Input","Body","Left","Right","Icon","Form","Text","NavigationHelpersContext","CommonActions","axios","baseURL","ResetPasswordScreen","navigation","useState","email","setEmail","password","setPassword","password2","setPassword2","handlePress","Alert","alert","userData","patch","then","res","status","console","log","text","onPress","dispatch","reset","index","routes","name","catch","error","message","styles","container","backgroundColor","goBack","fontSize","toLowerCase","margin","marginTop","StyleSheet","create"],"mappings":"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","sourcesContent":["// Navigates here when Log In button is clicked on WelcomeScreen\nimport React, { Component } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport {\n  Container,\n  Header,\n  Title,\n  Content,\n  Button,\n  Item,\n  Label,\n  Input,\n  Body,\n  Left,\n  Right,\n  Icon,\n  Form,\n  Text,\n} from \"native-base\";\nimport { Alert } from \"react-native\";\nimport { NavigationHelpersContext } from \"@react-navigation/core\";\nimport { CommonActions } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\n\nconst ResetPasswordScreen = ({ navigation }) => {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [password2, setPassword2] = React.useState(\"\");\n\n  const handlePress = () => {\n    if (email == \"\" || password == \"\" || password2 == \"\") {\n      return Alert.alert(\"Please fill in missing fields!\");\n    }\n    if (password != password2) {\n      return Alert.alert(\"Passwords mismatch. Please key in again.\");\n    }\n    const userData = {\n      email: email,\n      password: password,\n    };\n    axios\n      .patch(`${baseURL}users/resetpassword`, userData)\n      .then((res) => {\n        if (res.status == 200) {\n          console.log(\"Successful change!\");\n          Alert.alert(\"Password has been reset!\", \"\", [\n            {\n              text: \"OK\",\n              onPress: () =>\n                navigation.dispatch(\n                  CommonActions.reset({\n                    index: 1,\n                    routes: [{ name: \"Welcome\" }],\n                  })\n                ),\n            },\n          ]);\n        }\n      })\n      .catch((error) => {\n        if (error.message == \"Request failed with status code 400\") {\n          Alert.alert(\"Email does not exist.\");\n        }\n        console.log(\"Failed\");\n      });\n  };\n  // [\n  //   {\n  //     text: \"OK\",\n  //     onPress: () =>\n  //       navigation.dispatch(\n  //         CommonActions.reset({\n  //           index: 1,\n  //           routes: [{ name: \"Welcome\" }],\n  //         })\n  //       ),\n  //   },\n  // ];\n\n  return (\n    <Container style={styles.container}>\n      <Header style={{ backgroundColor: \"#bff6eb\" }}>\n        <Left>\n          <Button transparent onPress={() => navigation.goBack()}>\n            <Icon name=\"arrow-back\" />\n          </Button>\n        </Left>\n        <Body>\n          <Title style={{ fontSize: 17 }}>Reset Password</Title>\n        </Body>\n        <Right />\n      </Header>\n\n      <Content>\n        <Form>\n          <Item floatingLabel>\n            <Label>Email address</Label>\n            <Input\n              name={\"email\"}\n              id={\"email\"}\n              value={email}\n              onChangeText={(text) => setEmail(text.toLowerCase())}\n            />\n          </Item>\n          <Item floatingLabel>\n            <Label>New Password</Label>\n            <Input\n              name={\"password\"}\n              id={\"password\"}\n              value={password}\n              onChangeText={(text) => setPassword(text)}\n              secureTextEntry={true}\n            />\n          </Item>\n          <Item floatingLabel>\n            <Label>Confirm New Password</Label>\n            <Input\n              name={\"password2\"}\n              id={\"password2\"}\n              value={password2}\n              onChangeText={(text) => setPassword2(text)}\n              secureTextEntry={true}\n            />\n          </Item>\n        </Form>\n        <Button\n          block\n          style={{ margin: 15, marginTop: 50 }}\n          onPress={handlePress}\n        >\n          <Text>Reset Password</Text>\n        </Button>\n      </Content>\n    </Container>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#bff6eb\",\n  },\n});\n\nexport default ResetPasswordScreen;\n"]},"metadata":{},"sourceType":"module"}